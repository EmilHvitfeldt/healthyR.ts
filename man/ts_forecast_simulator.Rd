% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_fcst_sim.R
\name{ts_forecast_simulator}
\alias{ts_forecast_simulator}
\title{Time-series Forecasting Simulator}
\usage{
ts_forecast_simulator(
  .model,
  .horizon = 4,
  .iterations = 25,
  .sim_color = "steelblue",
  .alpha = 0.05,
  .show_plot = TRUE,
  .plotly_plot = TRUE
)
}
\arguments{
\item{.model}{A forecasting model of one of the following from the \code{forecast} package:
\itemize{
\item \code{\link[forecast]{Arima}}
\item \code{\link[forecast]{auto.arima}}
\item \code{\link[forecast]{ets}}
\item \code{\link[forecast]{nnetar}}
}}

\item{.horizon}{An integer defining the forecast horizon.}

\item{.iterations}{An integer, set the number of iterations of the simulation.}

\item{.sim_color}{Set the color of the simulation paths lines.}

\item{.alpha}{Set the opacity level of the simulation path lines.}

\item{.show_plot}{Logical, if TRUE will display the output plot.}

\item{.plotly_plot}{Logical, if TRUE will display the plotly plot otherwise a
ggplot object.}
}
\value{
The baseline series, the simulated values and a plot
}
\description{
Creating different forecast paths for forecast objects (when applicable),
by utilizing the underline model distribution with the \code{\link[stats]{simulate}} function.
}
\details{
This function expects to take in a model of either \code{Arima},
\code{auto.arima}, \code{ets} or \code{nnetar} from the \code{forecast} package. You can supply a
forecasting horizon, iterations and a few other items.
}
\examples{
library(forecast)
library(healthyR.data)
library(dplyr)
library(timetk)
library(ggplot2)
library(plotly)

data <- healthyR_data \%>\%
 filter(ip_op_flag == "I") \%>\%
   select(visit_end_date_time) \%>\%
   rename(date_col = visit_end_date_time) \%>\%
   summarise_by_time(
       .date_var = date_col
       , .by     = "month"
       , value   = n()
  ) \%>\%
   filter_by_time(
       .date_var     = date_col
       , .start_date = "2012"
       , .end_date   = "2019"
   )

# Make a ts object
start_date <- min(data$date_col)
start <- c(lubridate::year(start_date), lubridate::month(start_date))

 data <- ts(
   data = data$value
   , start = c(start[[1]], start[[2]])
   , frequency = 12
 )

# Create a model
fit <- auto.arima(data)

# Simulate 50 possible forecast paths, with .horizon of 12 months
ts_forecast_simulator(
  .model        = fit
  , .horizon    = 12
  , .iterations = 50
)

}
\author{
Steven P. Sanderson II, MPH
}
